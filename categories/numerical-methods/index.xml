<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>numerical methods on Blogging by Heath™</title><link>https://heathhenley.dev/categories/numerical-methods/</link><description>Recent content in numerical methods on Blogging by Heath™</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 26 May 2024 00:15:12 -0400</lastBuildDate><atom:link href="https://heathhenley.dev/categories/numerical-methods/index.xml" rel="self" type="application/rss+xml"/><item><title>Notes: gradient descent, Newton-Raphson, Lagrange Multipliers</title><link>https://heathhenley.dev/posts/numerical-methods/</link><pubDate>Sun, 26 May 2024 00:15:12 -0400</pubDate><guid>https://heathhenley.dev/posts/numerical-methods/</guid><description>TL;DR: A quick &amp;ldquo;non-mathematical&amp;rdquo; introduction to the most basic forms of gradient descent and Newton-Raphson methods to solve optimization problems involving functions of more than one variable. We also look at the Lagrange Multiplier method to solve optimization problems subject to constraints (and what the resulting system of nonlinear equations looks like, eg what we could apply Newton-Raphson to, etc).
Introduction Optimization problems are everywhere in engineering and science. If you can model your problem in a way that can write down some function that should be minimized or maximized (the objective function) to get the solution you want, even in cases where there is no analytical solution (most real cases), you can often obtain a numerical solution.</description></item><item><title>Newton Fractals Are Cool! And a Quick Intro to Newton's Method</title><link>https://heathhenley.dev/posts/newton-fractals-are-cool/</link><pubDate>Tue, 16 Jan 2024 12:46:44 -0500</pubDate><guid>https://heathhenley.dev/posts/newton-fractals-are-cool/</guid><description>Newton&amp;rsquo;s method is a root-finding algorithm that can be used to find the roots of differentiable functions. It is a very simple algorithm to implement, and it converges quickly in most cases, of course depending on the function. It is often used to find the roots of polynomials. For instance, in Chemical Engineering properties calculations, often cubic equations of state are used to model the behavior of fluids. These equations of state are cubic polynomials and most solved for their roots in most cases in order to compute fluid properties and phase equilibria.</description></item></channel></rss>