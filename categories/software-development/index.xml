<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software development on Blogging by Heath™</title><link>https://heathhenley.github.io/categories/software-development/</link><description>Recent content in software development on Blogging by Heath™</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 04 May 2022 10:05:29 -0400</lastBuildDate><atom:link href="https://heathhenley.github.io/categories/software-development/index.xml" rel="self" type="application/rss+xml"/><item><title>Smart Pointer Pointers</title><link>https://heathhenley.github.io/posts/smart-pointer-pointers/</link><pubDate>Wed, 04 May 2022 10:05:29 -0400</pubDate><guid>https://heathhenley.github.io/posts/smart-pointer-pointers/</guid><description>TL;DR - Switch raw heap pointers to unique_ptrs when possible. If your heap allocated resource needs multiple owners, use a shared_ptr instead.
I find myself reviewing C++ smart pointer types over and over again. I guess for me, it’s just been one of those things that doesn’t stick, or perhaps I’ve only needed to use them infrequently enough to forget about them. So, here’s a note to myself, and anyone else dying to read about smart pointers in C++.</description></item><item><title>¿Qué Hace Mi Empresa?</title><link>https://heathhenley.github.io/posts/qu%C3%A9-hace-mi-empresa/</link><pubDate>Tue, 05 Jan 2021 18:40:07 -0400</pubDate><guid>https://heathhenley.github.io/posts/qu%C3%A9-hace-mi-empresa/</guid><description>Aviso: eso ha sido un trozo de texto que escribí para practicar mí español, no tiene nada que ver con FarSounder oficialmente.
Introducción En mi empresa, se llama FarSounder, hacemos un sistema de Sónar para los buques y los yates. El objetivo principal de este sistema es buscar cosas que sean peligrosas delante de la nave y bajo el agua. Hay un sensor que se pone en la proa, que está dirigido hacia delante, por supuesto.</description></item><item><title>Triplet Counting Algorithmic Puzzle</title><link>https://heathhenley.github.io/posts/triplet-counting-algorithm-puzzle/</link><pubDate>Wed, 15 Apr 2020 21:05:24 -0400</pubDate><guid>https://heathhenley.github.io/posts/triplet-counting-algorithm-puzzle/</guid><description>We’ve all got a little more time on our hands lately due to social distancing and COVID-19 (unless you have young children). I’ve been partly entertaining myself by learning new programming languages and frameworks, and also with some programming puzzles on sites like HackerRank.
I found one problem I ran into recently particularly interesting, and I enjoyed figuring it out (read: drove me crazy for a bit). This post is a write up of the problem and the solution that I ended up with.</description></item><item><title>Switching to the Python Pathlib Module</title><link>https://heathhenley.github.io/posts/python-pathlib-module/</link><pubDate>Sun, 15 Mar 2020 20:32:39 -0400</pubDate><guid>https://heathhenley.github.io/posts/python-pathlib-module/</guid><description>It’s been about a year or so since we officially upgraded all of our tooling at my job at FarSounder from Python 2.7 to Python 3 (3.6 at the moment). Aside from the syntactic changes, there have been a handful of updates in Python 3 that I’ve found to really increase the readability of our scripts. One of those updates (from back in Python 3.4) has been the introduction of the pathlib module.</description></item></channel></rss>