<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>notes on Blogging by Heath™</title><link>https://heathhenley.github.io/categories/notes/</link><description>Recent content in notes on Blogging by Heath™</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 26 Dec 2023 12:10:44 -0500</lastBuildDate><atom:link href="https://heathhenley.github.io/categories/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Random Notes About Python's Random Module</title><link>https://heathhenley.github.io/posts/python-random-module-random-notes/</link><pubDate>Tue, 26 Dec 2023 12:10:44 -0500</pubDate><guid>https://heathhenley.github.io/posts/python-random-module-random-notes/</guid><description>TL;DR: Use the functions in the random module for modeling, simulations, games, sampling, etc. but use os.urandom, secrets, or random.SystemRandom for cryptographic applications. I know very little about cryptography and security, these are just my notes about stuff I recently learned.
Random Notes About Python&amp;rsquo;s Random Module It uses the Mersenne Twister algorithm, which is a pseudorandom number generator with a period of 2^19937-1. It is one of the most widely used PRNGs in the world, and suitable for many applications.</description></item></channel></rss>