<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Blogging by Heath™</title><link>https://heathhenley.dev/tags/python/</link><description>Recent content in python on Blogging by Heath™</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 25 Dec 2024 10:50:52 -0500</lastBuildDate><atom:link href="https://heathhenley.dev/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Advent of Code 2024 Notes</title><link>https://heathhenley.dev/posts/aoc-notes-2024/</link><pubDate>Wed, 25 Dec 2024 10:50:52 -0500</pubDate><guid>https://heathhenley.dev/posts/aoc-notes-2024/</guid><description>TL;DR - Misc notes from the 2024 Advent of Code in Python and Ocaml and a little bit of Golang.
The repo with my solutions to the Advent of Code 2024 problems can be found here. This is a bunch of random notes from this year&amp;rsquo;s event, no full write-ups or anything for now just general notes and take-aways.
Languages Learned a bunch of Ocaml (even though I didn’t use it everyday as intended)</description></item><item><title>Adding Basic OAuth Flow to a MPA</title><link>https://heathhenley.dev/posts/google-auth-for-new-depths/</link><pubDate>Sun, 10 Nov 2024 15:09:10 -0500</pubDate><guid>https://heathhenley.dev/posts/google-auth-for-new-depths/</guid><description>TL;DR - For newdepths.xyz I wanted to add a simpler way for users to log in, in that way they can avoid creating a new password just for this little site. I also wanted to implement all the parts of the flow to get a good feel for them and how they fit together. Of course there are a lot of libraries that handle this well, but I think that doing it manually with low stakes is a great way to learn how everything fits together.</description></item><item><title>Modeling the Cooling in a Propane Tank</title><link>https://heathhenley.dev/posts/campstove-cheme/</link><pubDate>Sun, 20 Oct 2024 09:19:59 -0400</pubDate><guid>https://heathhenley.dev/posts/campstove-cheme/</guid><description>TL;DR: In a recent camping trip we noticed just how cold our propane tank was getting after cooking for a while - we started out pretty chilly anyway (about 50 F). The physics of this is cool and I wanted to play with modeling it.
I have one of these little two burner propane stoves that we use when camping, it looks something like this:
While we were cooking breakfast and boiling water for coffee, we noticed that the propane tank was getting super cold - there was not only a thick layer of frost forming on the outside, but a small chunk of solid ice on the bottom of the tank where it met the picnic table&amp;hellip;</description></item><item><title>Notes: Gradient Descent, Newton-Raphson, Lagrange Multipliers</title><link>https://heathhenley.dev/posts/numerical-methods/</link><pubDate>Sun, 26 May 2024 00:15:12 -0400</pubDate><guid>https://heathhenley.dev/posts/numerical-methods/</guid><description>TL;DR: A quick &amp;ldquo;non-mathematical&amp;rdquo; introduction to the most basic forms of gradient descent and Newton-Raphson methods to solve optimization problems involving functions of more than one variable. We also look at the Lagrange Multiplier method to solve optimization problems subject to constraints (and what the resulting system of nonlinear equations looks like, eg what we could apply Newton-Raphson to, etc).
Introduction Optimization problems are everywhere in engineering and science. If you can model your problem in a way that can write down some function that should be minimized or maximized (the objective function) to get the solution you want, even in cases where there is no analytical solution (most real cases), you can often obtain a numerical solution.</description></item><item><title>Notes: 'Hacking' on S63</title><link>https://heathhenley.dev/posts/hacking-on-s63/</link><pubDate>Wed, 24 Apr 2024 17:15:41 -0400</pubDate><guid>https://heathhenley.dev/posts/hacking-on-s63/</guid><description>TL;DR: The S63 encryption scheme is old and can be broken pretty easily depending on the information you have. These are some notes on how with a simple Python script to show what I mean.
So this is an old standard that will soon be replaced by S100, but it&amp;rsquo;s still in place and used today. The encryption part of the scheme is mostly to allow data suppliers to license their data to users in a standardized way and collected payment for access to that data.</description></item><item><title>How Does S-63 Electronic Navigational Chart (ENC) Format Work?</title><link>https://heathhenley.dev/posts/how-does-s63-enc-format-work/</link><pubDate>Tue, 30 Jan 2024 19:18:13 -0500</pubDate><guid>https://heathhenley.dev/posts/how-does-s63-enc-format-work/</guid><description>TL;DR: S-63 is a standard used to encrypt official Electronic Navigational Charts (ENCs). Encryption and signing allow clients to be sure that they have official data and that it has not been tampered with. It also make it possible for data providers to license sections of the charts (cells) and be sure that they are not being shared illegally / pirated. This post gives an overview of the process and shows how to implement the key steps.</description></item><item><title>Newton Fractals Are Cool! And a Quick Intro to Newton's Method</title><link>https://heathhenley.dev/posts/newton-fractals-are-cool/</link><pubDate>Tue, 16 Jan 2024 12:46:44 -0500</pubDate><guid>https://heathhenley.dev/posts/newton-fractals-are-cool/</guid><description>Newton&amp;rsquo;s method is a root-finding algorithm that can be used to find the roots of differentiable functions. It is a very simple algorithm to implement, and it converges quickly in most cases, of course depending on the function. It is often used to find the roots of polynomials. For instance, in Chemical Engineering properties calculations, often cubic equations of state are used to model the behavior of fluids. These equations of state are cubic polynomials and most solved for their roots in most cases in order to compute fluid properties and phase equilibria.</description></item><item><title>Add Callout Captions to Camtasia 2023</title><link>https://heathhenley.dev/posts/add-callout-captions-to-camtasia-2023/</link><pubDate>Mon, 08 Jan 2024 19:14:18 -0500</pubDate><guid>https://heathhenley.dev/posts/add-callout-captions-to-camtasia-2023/</guid><description>TL;DR: Use the script below to add captions from a .srt file to a Camtasia 2023 project as callouts so they can be edited and styled.
The script is available on GitHub. The Camtasia project file is just a JSON file, so this parses the captions from the .srt file and adds them to the project file as callouts.
Not intended to produce polished captions, but rather to get the captions into the project so they can be edited and styled - basically as a time saver for the initial captioning process.</description></item><item><title>Random Notes About Python's Random Module</title><link>https://heathhenley.dev/posts/python-random-module-random-notes/</link><pubDate>Tue, 26 Dec 2023 12:10:44 -0500</pubDate><guid>https://heathhenley.dev/posts/python-random-module-random-notes/</guid><description>TL;DR: Use the functions in the random module for modeling, simulations, games, sampling, etc. but use os.urandom, secrets, or random.SystemRandom for cryptographic applications. I know very little about cryptography and security, these are just my notes about stuff I recently learned.
It uses the Mersenne Twister algorithm, which is a pseudorandom number generator with a period of 2^19937-1. It is one of the most widely used PRNGs in the world, and suitable for many applications.</description></item><item><title>Modeling Sales Pipeline using Monte Carlo Simulation</title><link>https://heathhenley.dev/posts/modeling-sales-pipeline-with-monte-carlo/</link><pubDate>Sat, 23 Sep 2023 12:44:58 -0400</pubDate><guid>https://heathhenley.dev/posts/modeling-sales-pipeline-with-monte-carlo/</guid><description>TL;DR - Monte Carlo Simulation can be used to model your historical sales pipeline data to account for some of the randomness and uncertainty in the sales process. In this post, Monte Carlo Simulation is introduced and then applied to the same case introduced in a previous post.
What is Monte Carlo Simulation? Monte Carlo Simulation is used to simulate a process using random sampling. It is a very general technique that can be used to model all kinds of processes in fields ranging from physics and chemistry, to economics and finance.</description></item><item><title>Update Github Profile Readme Dynamically using a Github Workflow</title><link>https://heathhenley.dev/posts/update-gh-readme-with-action/</link><pubDate>Tue, 29 Aug 2023 20:44:26 -0400</pubDate><guid>https://heathhenley.dev/posts/update-gh-readme-with-action/</guid><description>TL;DR: Update your Github Profile Readme dynamically with recent blog posts. There&amp;rsquo;s an example (profile and code).
Github Profile Readme Github introduced the option to a add profile readme, which is a special repository that is used to display a readme on your profile page. I wanted to post links to my recent blog posts there, so I wrote a simple python script to check for the latest X posts, and update the readme with links to them.</description></item><item><title>Refactoring my Simple Python Chatbot Module</title><link>https://heathhenley.dev/posts/refactoring-chatbot-python-module/</link><pubDate>Thu, 17 Aug 2023 23:40:00 -0400</pubDate><guid>https://heathhenley.dev/posts/refactoring-chatbot-python-module/</guid><description>TL;DR: cleaned up a simple chatbot module that I wrote in Python, originally as a way to impersonate a friend in my Slack chat.
How it started I wrote a chatbot in python to impersonate one of my friends on Slack. It was a fun project, but originally I set it up a pretty hacky way. Here&amp;rsquo;s an example of what it looks like integrated into slack:
Ok so that&amp;rsquo;s a pretty goofy impersonation of a friend of mine (littered with inside jokes) - but it can actually be useful.</description></item><item><title>Notes: Django w/ PostGIS on GCP Cloud Run and Github Actions</title><link>https://heathhenley.dev/posts/django-postgis-cloud-run-gh-actions/</link><pubDate>Thu, 10 Aug 2023 17:58:22 -0400</pubDate><guid>https://heathhenley.dev/posts/django-postgis-cloud-run-gh-actions/</guid><description>TL;DR: this a short post about the configuration steps I took to get django running with the GDAL extension and postgreSQL/postGIS backend. These notes are what it took to get it deployed on GCP Cloud Run, and to use Github Actions to run automated tests on push or pull request. Pretty straight forward, but I had to iterate a few times to get it right so hopefully this helps someone else.</description></item><item><title>Modeling a Sales Pipeline as a Markov Chain</title><link>https://heathhenley.dev/posts/modeling-a-sales-pipeline-as-a-markov-chain/</link><pubDate>Mon, 19 Jun 2023 17:27:59 -0400</pubDate><guid>https://heathhenley.dev/posts/modeling-a-sales-pipeline-as-a-markov-chain/</guid><description>TL;DR - Using a Markov Chain to model your historical sales pipeline data can help you understand the probability of eventually closing a deal based on (1) the stage the opportunity is currently in and (2) your historical data. This lets you estimate the future value of your current pipeline based on your own past data.
What is a Markov Chain? It is a mathematical model used to describe how probabilistic systems or processes evolve over time.</description></item><item><title>YOLO-ing All the Traffic Cams</title><link>https://heathhenley.dev/posts/yolo-all-the-traffic-cams/</link><pubDate>Sat, 11 Mar 2023 15:40:04 -0500</pubDate><guid>https://heathhenley.dev/posts/yolo-all-the-traffic-cams/</guid><description>TL;DR - Here&amp;rsquo;s a web app to list labelled traffic cam images from the RI DOT website. I used YOLO (You Only Look Once) to detect objects (vehicles) in the images and FastAPI to serve the results to a React app. The displays the cam images and results and uses LeafletJS to display the cameras on a map. The backend is hosted on Railway and the front end on Github Pages.</description></item><item><title>New England Shipwreck Map</title><link>https://heathhenley.dev/posts/simple-wreck-map/</link><pubDate>Thu, 22 Dec 2022 15:28:45 -0500</pubDate><guid>https://heathhenley.dev/posts/simple-wreck-map/</guid><description>TL;DR - Here&amp;rsquo;s a list of shipwrecks plotted on an interactive map, all over the Narragansett Bay and greater New England area.
Motivation At FarSounder I work on the development software of 3D Forward Looking Sonar products. Part of that development process of course includes collecting data from a lot of different situations and running it through some processing algorithms to evaluate performance and make improvements. To that end, we&amp;rsquo;re often out on the Narragansett Bay collecting data with the system, and always looking for areas in the bay with interesting features that we can use to test and benchmark our algorithms (pilings, super steep shoals, rock piles, piers, etc).</description></item><item><title>Shut the Box</title><link>https://heathhenley.dev/posts/shut-the-box/</link><pubDate>Mon, 01 Nov 2021 21:11:13 -0400</pubDate><guid>https://heathhenley.dev/posts/shut-the-box/</guid><description>TL;DR - choose either the option containing the largest number, or the fewest tiles and you&amp;rsquo;ll be ok!
Read on to learn more&amp;hellip;
What am I talking about? Over the summer at a friends house, I was presented with an “old bar game” that I was completely unfamiliar with. It’s a wooden tray, with the numbers 1-12 printed in ascending order on little wooden tiles.
Here’s an example of what it looks like:</description></item><item><title>Memoization in the Wild</title><link>https://heathhenley.dev/posts/memoization-in-the-wild/</link><pubDate>Mon, 02 Aug 2021 17:32:43 -0400</pubDate><guid>https://heathhenley.dev/posts/memoization-in-the-wild/</guid><description>Overview Memoization or memoisation is a method used to optimize programs. Usually, at least in my experience, it’s one of the first topics introduced when dynamic programming algorithms are being discussed. With a quick google search you can find the Wiki or a trillion other blogs about it - most will show the canonical example - the “hello world” of the topic - that is, using memoization to optimize a recursive implementation of a function that generates the n-th Fibonacci number (or sometimes a function computing factorials).</description></item><item><title>Computing Pi by Throwing Darts</title><link>https://heathhenley.dev/posts/computing-pi-by-throwing-darts/</link><pubDate>Sun, 14 Mar 2021 21:17:10 -0400</pubDate><guid>https://heathhenley.dev/posts/computing-pi-by-throwing-darts/</guid><description>In celebration of pi-day, let&amp;rsquo;s look at a method of computing pi using random numbers that is often presented in probability, statistics or other classes, as an elementary example of using random sampling and / or simulation.
In my case, the first time I remember seeing / hearing about this example was in a probability class, however we didn&amp;rsquo;t actually write any code to try it, we just looked at the idea.</description></item></channel></rss>