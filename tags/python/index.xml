<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Blogging by Heath™</title><link>https://heathhenley.github.io/tags/python/</link><description>Recent content in python on Blogging by Heath™</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 17 Aug 2023 23:40:00 -0400</lastBuildDate><atom:link href="https://heathhenley.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Refactoring my Simple Python Chatbot Module</title><link>https://heathhenley.github.io/posts/refactoring-chatbot-python-module/</link><pubDate>Thu, 17 Aug 2023 23:40:00 -0400</pubDate><guid>https://heathhenley.github.io/posts/refactoring-chatbot-python-module/</guid><description>TL;DR: cleaned up a simple chatbot module that I wrote in Python, originally as a way to impersonate a friend in my Slack chat.
How it started I wrote a chatbot in python to impersonate one of my friends on Slack. It was a fun project, but originally I set it up a pretty hacky way. Here&amp;rsquo;s an example of what it looks like integrated into slack:
Ok so that&amp;rsquo;s a pretty goofy impersonation of a friend of mine (littered with inside jokes) - but it can actually be useful.</description></item><item><title>Notes: Django w/ PostGIS on GCP Cloud Run and Github Actions</title><link>https://heathhenley.github.io/posts/django-postgis-cloud-run-gh-actions/</link><pubDate>Thu, 10 Aug 2023 17:58:22 -0400</pubDate><guid>https://heathhenley.github.io/posts/django-postgis-cloud-run-gh-actions/</guid><description>TL;DR: this a short post about the configuration steps I took to get django running with the GDAL extension and postgreSQL/postGIS backend. These notes are what it took to get it deployed on GCP Cloud Run, and to use Github Actions to run automated tests on push or pull request. Pretty straight forward, but I had to iterate a few times to get it right so hopefully this helps someone else.</description></item><item><title>Modeling a Sales Pipeline as a Markov Chain</title><link>https://heathhenley.github.io/posts/modeling-a-sales-pipeline-as-a-markov-chain/</link><pubDate>Mon, 19 Jun 2023 17:27:59 -0400</pubDate><guid>https://heathhenley.github.io/posts/modeling-a-sales-pipeline-as-a-markov-chain/</guid><description>TL;DR - Using a Markov Chain to model your historical sales pipeline data can help you understand the probability of eventually closing a deal based on (1) the stage the opportunity is currently in and (2) your historical data. This lets you estimate the future value of your current pipeline based on your own past data.
What is a Markov Chain? It is a mathematical model used to describe how probabilistic systems or processes evolve over time.</description></item><item><title>YOLO-ing All the Traffic Cams</title><link>https://heathhenley.github.io/posts/yolo-all-the-traffic-cams/</link><pubDate>Sat, 11 Mar 2023 15:40:04 -0500</pubDate><guid>https://heathhenley.github.io/posts/yolo-all-the-traffic-cams/</guid><description>TL;DR - Here&amp;rsquo;s a web app to list labelled traffic cam images from the RI DOT website. I used YOLO (You Only Look Once) to detect objects (vehicles) in the images and FastAPI to serve the results to a React app. The displays the cam images and results and uses LeafletJS to display the cameras on a map. The backend is hosted on Railway and the front end on Github Pages.</description></item><item><title>New England Shipwreck Map</title><link>https://heathhenley.github.io/posts/simple-wreck-map/</link><pubDate>Thu, 22 Dec 2022 15:28:45 -0500</pubDate><guid>https://heathhenley.github.io/posts/simple-wreck-map/</guid><description>TL;DR - Here&amp;rsquo;s a list of shipwrecks plotted on an interactive map, all over the Narragansett Bay and greater New England area.
Motivation At FarSounder I work on the development software of 3D Forward Looking Sonar products. Part of that development process of course includes collecting data from a lot of different situations and running it through some processing algorithms to evaluate performance and make improvements. To that end, we&amp;rsquo;re often out on the Narragansett Bay collecting data with the system, and always looking for areas in the bay with interesting features that we can use to test and benchmark our algorithms (pilings, super steep shoals, rock piles, piers, etc).</description></item><item><title>Shut the Box</title><link>https://heathhenley.github.io/posts/shut-the-box/</link><pubDate>Mon, 01 Nov 2021 21:11:13 -0400</pubDate><guid>https://heathhenley.github.io/posts/shut-the-box/</guid><description>TL;DR - choose either the option containing the largest number, or the fewest tiles and you&amp;rsquo;ll be ok!
Read on to learn more&amp;hellip;
What am I talking about? Over the summer at a friends house, I was presented with an “old bar game” that I was completely unfamiliar with. It’s a wooden tray, with the numbers 1-12 printed in ascending order on little wooden tiles.
Here’s an example of what it looks like:</description></item><item><title>Memoization in the Wild</title><link>https://heathhenley.github.io/posts/memoization-in-the-wild/</link><pubDate>Mon, 02 Aug 2021 17:32:43 -0400</pubDate><guid>https://heathhenley.github.io/posts/memoization-in-the-wild/</guid><description>Overview Memoization or memoisation is a method used to optimize programs. Usually, at least in my experience, it’s one of the first topics introduced when dynamic programming algorithms are being discussed. With a quick google search you can find the Wiki or a trillion other blogs about it - most will show the canonical example - the “hello world” of the topic - that is, using memoization to optimize a recursive implementation of a function that generates the n-th Fibonacci number (or sometimes a function computing factorials).</description></item><item><title>Computing Pi by Throwing Darts</title><link>https://heathhenley.github.io/posts/computing-pi-by-throwing-darts/</link><pubDate>Sun, 14 Mar 2021 21:17:10 -0400</pubDate><guid>https://heathhenley.github.io/posts/computing-pi-by-throwing-darts/</guid><description>In celebration of pi-day, let&amp;rsquo;s look at a method of computing pi using random numbers that is often presented in probability, statistics or other classes, as an elementary example of using random sampling and / or simulation.
In my case, the first time I remember seeing / hearing about this example was in a probability class, however we didn&amp;rsquo;t actually write any code to try it, we just looked at the idea.</description></item></channel></rss>